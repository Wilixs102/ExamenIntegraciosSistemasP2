{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Wilixs\\\\Desktop\\\\Projectx\\\\gestion-pedidos-AppWeb\\\\src\\\\components\\\\OrderForm.js\",\n  _s = $RefreshSig$();\n// src/components/OrderForm.js\n\nimport React, { useState } from 'react';\nimport { updateInventory, getProduct } from '../api';\nimport Papa from 'papaparse';\nimport '../styles/OrderForm.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst OrderForm = () => {\n  _s();\n  const [productId, setProductId] = useState('');\n  const [quantity, setQuantity] = useState('');\n  const [customerName, setCustomerName] = useState('');\n  const [customerEmail, setCustomerEmail] = useState('');\n  const [message, setMessage] = useState('');\n  const [orderData, setOrderData] = useState([]);\n  const isNumeric = value => {\n    return /^-?\\d+$/.test(value);\n  };\n  const handleSubmit = async event => {\n    event.preventDefault();\n    if (!productId || !quantity || !customerName || !customerEmail) {\n      setMessage('Se deben ingresar todos los parámetros.');\n      return;\n    }\n    if (!isNumeric(quantity)) {\n      setMessage('Quantity debe ser un número.');\n      return;\n    }\n    try {\n      const originalProductResponse = await getProduct(productId);\n      const originalProduct = originalProductResponse.producto;\n      if (!originalProduct) {\n        setMessage('Product no encontrado.');\n        return;\n      }\n      const stock = originalProduct.quantity;\n      const quantityNumber = parseInt(quantity, 10);\n      if (stock < quantityNumber) {\n        setMessage(`La cantidad de pedido (${quantityNumber}) excede el stock del producto (${stock}).`);\n        return;\n      }\n      const newQuantity = (stock - quantityNumber).toString();\n      const updatedProduct = {\n        id: productId,\n        quantity: newQuantity,\n        name: originalProduct.name,\n        price: originalProduct.price\n      };\n      const response = await updateInventory(productId, updatedProduct);\n      setMessage('Pedido realizado satisfactoriamente!');\n      const order = {\n        orderId: new Date().getTime(),\n        productId: productId,\n        productName: originalProduct.name,\n        productPrice: originalProduct.price,\n        // Captura el precio del producto\n        quantity: quantityNumber,\n        customerName: customerName,\n        customerEmail: customerEmail\n      };\n      setOrderData([...orderData, order]);\n    } catch (error) {\n      setMessage('No se pudo realizar el pedido.');\n    }\n  };\n  const exportToCSV = () => {\n    const csv = Papa.unparse(orderData);\n    const blob = new Blob([csv], {\n      type: 'text/csv;charset=utf-8;'\n    });\n    const url = URL.createObjectURL(blob);\n    const link = document.createElement('a');\n    link.setAttribute('href', url);\n    link.setAttribute('download', 'order_data.csv');\n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Realizar Pedidos\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"productId\",\n          children: \"Product ID:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"productId\",\n          value: productId,\n          onChange: e => setProductId(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"quantity\",\n          children: \"Quantity:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"quantity\",\n          value: quantity,\n          onChange: e => setQuantity(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"customerName\",\n          children: \"Customer Name:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"customerName\",\n          value: customerName,\n          onChange: e => setCustomerName(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"customerEmail\",\n          children: \"Customer Email:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          id: \"customerEmail\",\n          value: customerEmail,\n          onChange: e => setCustomerEmail(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Realizar Pedido\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 25\n    }, this), orderData.length > 0 && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: exportToCSV,\n      children: \"Exportar a CSV\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 9\n  }, this);\n};\n_s(OrderForm, \"mfA2hzT3BzSs0NGaMpWukc6FGcI=\");\n_c = OrderForm;\nexport default OrderForm;\nvar _c;\n$RefreshReg$(_c, \"OrderForm\");","map":{"version":3,"names":["React","useState","updateInventory","getProduct","Papa","jsxDEV","_jsxDEV","OrderForm","_s","productId","setProductId","quantity","setQuantity","customerName","setCustomerName","customerEmail","setCustomerEmail","message","setMessage","orderData","setOrderData","isNumeric","value","test","handleSubmit","event","preventDefault","originalProductResponse","originalProduct","producto","stock","quantityNumber","parseInt","newQuantity","toString","updatedProduct","id","name","price","response","order","orderId","Date","getTime","productName","productPrice","error","exportToCSV","csv","unparse","blob","Blob","type","url","URL","createObjectURL","link","document","createElement","setAttribute","body","appendChild","click","removeChild","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","onChange","e","target","length","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Wilixs/Desktop/Projectx/gestion-pedidos-AppWeb/src/components/OrderForm.js"],"sourcesContent":["// src/components/OrderForm.js\n\nimport React, { useState } from 'react';\nimport { updateInventory, getProduct } from '../api';\nimport Papa from 'papaparse';\nimport '../styles/OrderForm.css';\n\nconst OrderForm = () => {\n    const [productId, setProductId] = useState('');\n    const [quantity, setQuantity] = useState('');\n    const [customerName, setCustomerName] = useState('');\n    const [customerEmail, setCustomerEmail] = useState('');\n    const [message, setMessage] = useState('');\n    const [orderData, setOrderData] = useState([]);\n\n    const isNumeric = (value) => {\n        return /^-?\\d+$/.test(value);\n    };\n\n    const handleSubmit = async (event) => {\n        event.preventDefault();\n\n        if (!productId || !quantity || !customerName || !customerEmail) {\n            setMessage('Se deben ingresar todos los parámetros.');\n            return;\n        }\n\n        if (!isNumeric(quantity)) {\n            setMessage('Quantity debe ser un número.');\n            return;\n        }\n\n        try {\n            const originalProductResponse = await getProduct(productId);\n            const originalProduct = originalProductResponse.producto;\n\n            if (!originalProduct) {\n                setMessage('Product no encontrado.');\n                return;\n            }\n\n            const stock = originalProduct.quantity;\n            const quantityNumber = parseInt(quantity, 10);\n\n            if (stock < quantityNumber) {\n                setMessage(`La cantidad de pedido (${quantityNumber}) excede el stock del producto (${stock}).`);\n                return;\n            }\n\n            const newQuantity = (stock - quantityNumber).toString();\n\n            const updatedProduct = {\n                id: productId,\n                quantity: newQuantity,\n                name: originalProduct.name,\n                price: originalProduct.price\n            };\n\n            const response = await updateInventory(productId, updatedProduct);\n            setMessage('Pedido realizado satisfactoriamente!');\n\n            const order = {\n                orderId: new Date().getTime(),\n                productId: productId,\n                productName: originalProduct.name,\n                productPrice: originalProduct.price,  // Captura el precio del producto\n                quantity: quantityNumber,\n                customerName: customerName,\n                customerEmail: customerEmail\n            };\n\n            setOrderData([...orderData, order]);\n        } catch (error) {\n            setMessage('No se pudo realizar el pedido.');\n        }\n    };\n\n    const exportToCSV = () => {\n        const csv = Papa.unparse(orderData);\n        const blob = new Blob([csv], { type: 'text/csv;charset=utf-8;' });\n        const url = URL.createObjectURL(blob);\n        const link = document.createElement('a');\n        link.setAttribute('href', url);\n        link.setAttribute('download', 'order_data.csv');\n        document.body.appendChild(link);\n        link.click();\n        document.body.removeChild(link);\n    };\n\n    return (\n        <div>\n            <h2>Realizar Pedidos</h2>\n            <form onSubmit={handleSubmit}>\n                <div>\n                    <label htmlFor=\"productId\">Product ID:</label>\n                    <input\n                        type=\"text\"\n                        id=\"productId\"\n                        value={productId}\n                        onChange={(e) => setProductId(e.target.value)}\n                    />\n                </div>\n                <div>\n                    <label htmlFor=\"quantity\">Quantity:</label>\n                    <input\n                        type=\"text\"\n                        id=\"quantity\"\n                        value={quantity}\n                        onChange={(e) => setQuantity(e.target.value)}\n                    />\n                </div>\n                <div>\n                    <label htmlFor=\"customerName\">Customer Name:</label>\n                    <input\n                        type=\"text\"\n                        id=\"customerName\"\n                        value={customerName}\n                        onChange={(e) => setCustomerName(e.target.value)}\n                    />\n                </div>\n                <div>\n                    <label htmlFor=\"customerEmail\">Customer Email:</label>\n                    <input\n                        type=\"email\"\n                        id=\"customerEmail\"\n                        value={customerEmail}\n                        onChange={(e) => setCustomerEmail(e.target.value)}\n                    />\n                </div>\n                <button type=\"submit\">Realizar Pedido</button>\n            </form>\n            {message && <p>{message}</p>}\n            {orderData.length > 0 && (\n                <button onClick={exportToCSV}>Exportar a CSV</button>\n            )}\n        </div>\n    );\n};\n\nexport default OrderForm;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}