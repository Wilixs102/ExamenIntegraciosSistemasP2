{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Wilixs\\\\Desktop\\\\Projectx\\\\gestion-pedidos-AppWeb\\\\src\\\\components\\\\ProductList.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios'; // Usamos axios directamente\nimport '../styles/ProductList.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProductList = () => {\n  _s();\n  const [products, setProducts] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const getProducts = async () => {\n      setLoading(true); // Asegurarse de que el estado de carga se establezca al inicio\n      try {\n        // Cambiamos la URL para obtener los libros de Stephen King\n        const response = await axios.get('https://stephen-king-api.onrender.com/api/books');\n        const productsWithImages = addImagesToProducts(response.data);\n        setProducts(productsWithImages);\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n    getProducts();\n  }, []);\n  const addImagesToProducts = products => {\n    return products.map((product, index) => {\n      const statusCode = 100 + index % 500; // Genera un código de estado HTTP en un rango de 100 a 599\n      const image = `https://http.cat/${statusCode}`;\n      return {\n        ...product,\n        image: image,\n        price: 'N/A' // Asumiendo que no hay un precio definido en la API\n      };\n    });\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading\",\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 16\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error\",\n      children: [\"Error: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Libros de Stephen King Disponibles\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: products.map(product => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: product.image,\n            alt: product.name,\n            className: \"product-image\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"product-id\",\n            children: product.id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"product-name\",\n            children: product.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"product-price\",\n            children: product.price\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"product-quantity\",\n            children: \"Stock: N/A\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 25\n        }, this)\n      }, product.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 9\n  }, this);\n};\n_s(ProductList, \"3+N/VFIgZOBgubN9oS5aTzm2qqY=\");\n_c = ProductList;\nexport default ProductList;\nvar _c;\n$RefreshReg$(_c, \"ProductList\");","map":{"version":3,"names":["React","useEffect","useState","axios","jsxDEV","_jsxDEV","ProductList","_s","products","setProducts","loading","setLoading","error","setError","getProducts","response","get","productsWithImages","addImagesToProducts","data","message","map","product","index","statusCode","image","price","className","children","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","name","id","title","_c","$RefreshReg$"],"sources":["C:/Users/Wilixs/Desktop/Projectx/gestion-pedidos-AppWeb/src/components/ProductList.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport axios from 'axios'; // Usamos axios directamente\nimport '../styles/ProductList.css';\n\nconst ProductList = () => {\n    const [products, setProducts] = useState([]);\n    const [loading, setLoading] = useState(true);\n    const [error, setError] = useState(null);\n\n    useEffect(() => {\n        const getProducts = async () => {\n            setLoading(true); // Asegurarse de que el estado de carga se establezca al inicio\n            try {\n                // Cambiamos la URL para obtener los libros de Stephen King\n                const response = await axios.get('https://stephen-king-api.onrender.com/api/books');\n                const productsWithImages = addImagesToProducts(response.data);\n                setProducts(productsWithImages);\n            } catch (error) {\n                setError(error.message);\n            } finally {\n                setLoading(false);\n            }\n        };\n\n        getProducts();\n    }, []);\n\n    const addImagesToProducts = (products) => {\n        return products.map((product, index) => {\n            const statusCode = 100 + (index % 500); // Genera un código de estado HTTP en un rango de 100 a 599\n            const image = `https://http.cat/${statusCode}`;\n            return {\n                ...product,\n                image: image,\n                price: 'N/A' // Asumiendo que no hay un precio definido en la API\n            };\n        });\n    };\n\n    if (loading) {\n        return <div className=\"loading\">Loading...</div>;\n    }\n\n    if (error) {\n        return <div className=\"error\">Error: {error}</div>;\n    }\n\n    return (\n        <div>\n            <h1>Libros de Stephen King Disponibles</h1>\n            <div>\n                {products.map(product => (\n                    <div key={product.id}>\n                        <div>\n                            <img src={product.image} alt={product.name} className=\"product-image\" />\n                            <h2 className=\"product-id\">{product.id}</h2>\n                            <h2 className=\"product-name\">{product.title}</h2>\n                            <p className=\"product-price\">{product.price}</p>\n                            <p className=\"product-quantity\">Stock: N/A</p>\n                        </div>\n                    </div>\n                ))}\n            </div>\n        </div>\n    );\n};\n\nexport default ProductList;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}